
@{
}

@Styles.Render("~/Content/home.css?v=" + Guid.NewGuid())
<div class="logContainer">
    <div class="queryContainer">
        <ol class="breadcrumb">
            <li class="active">Active Report</li>
        </ol>
        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="select-zoneName">Zone Name</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownList("select-zoneName",new SelectList(ViewBag.ZoneList,"Value","Text"), new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="txt-StartTime">Start Time</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="startTime" id="txt-StartTime" class="form-control" />
            </div>
        </div>
        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="txt-EndTime">End Time</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="endTime" id="txt-EndTime" class="form-control" />
            </div>
        </div>
        <div class="col-md-4 col-md-offset-8 text-right">
            <button id="query" type="button" class="btn btn-primary">Query</button>
        </div>
    </div>
    <div class="resultContainer" style="margin-top: 20px; margin-left: 40px; margin-right: 60px;">
        <table id="table" class="table table-bordered"></table>
    </div>
</div>

<script type="text/javascript">
    var TableInit = function () {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function () {
            $("body").mLoading({ text: "Processing..." }, "show");
            $('#table').bootstrapTable({
                url: '/Home/GetActiveReport',         //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: false,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                queryParams: oTableInit.queryParams,//传递参数（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 100,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: false,
                showColumns: false,                  //是否显示所有的列
                showRefresh: false,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: false,                //是否启用点击选中行
                // height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                // uniqueId: "ID",                     //每一行的唯一标识，一般为主键列
                showToggle: false,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                   //是否显示父子表
                //showExport: true,
                //exportDataType: 'all',
                columns: [{
                    field: 'ID',
                    title: '#',
                    width: '4%',
                    formatter: function (value, row, index) {
                        var pageSize = $('#table').bootstrapTable('getOptions').pageSize;     //通过table的#id 得到每页多少条
                        var pageNumber = $('#table').bootstrapTable('getOptions').pageNumber; //通过table的#id 得到当前第几页
                        return pageSize * (pageNumber - 1) + index + 1;    // 返回每条的序号： 每页条数 *（当前页 - 1 ）+ 序号
                    }
                },
                {
                    field: 'IP',
                    title: 'IP',
                    width: '8%',
                    formatter: function (value, row, index) {
                        debugger
                        var str = '<a href="/home/AddWhiteList?ip=' + value + '&zoneId=' + row.ZoneId + '" >' + value + '</a>';
                        if (row.IfCreateWhiteLimit===true) {
                            str = value;
                        }
                        return str;
                    }
                },
                {
                    field: 'HostName',
                    title: 'Host Name',
                    width: '14%',
                    cellStyle: function () {
                        return {
                            css: {
                                "word-break": "break-all"
                            }
                        };
                    },
                },
                {
                    field: 'MaxDisplay',
                    title: 'Max',
                    width: '10%',
                },
                {
                    field: 'MinDisplay',
                    title: 'Min',
                    width: '10%',
                },
                {
                    field: 'AvgDisplay',
                    title: 'Avg.',
                    width: '10%',
                },
                {
                    field: 'FullUrl',
                    title: 'Full URLs',
                    width: '44%',
                    formatter: function (value, row, index) {
                        debugger
                        var urlList = JSON.parse(value);
                        var str = "";
                        for (var i = 0; i < urlList.length; i++) {
                            str += urlList[i] + "<br>";
                        }
                        return str;
                    },
                    cellStyle: function () {
                        return {
                            css: {
                                "word-break": "break-all"
                            }
                        };
                    },
                }
                ],
                onLoadSuccess: function () {
                    $("body").mLoading("hide");
                },
                onLoadError: function () {
                    $("body").mLoading("hide");
                },
                onPageChange: function () {
                    $("body").mLoading({ text: "Processing..." }, "show");
                }
            });
        };

        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit,   //页面大小
                offset: params.offset,  //页码
                zoneID: $("#select-zoneName").val(),
                startTime: $("#txt-StartTime").val(),
                endTime: $("#txt-EndTime").val()
            };
            return temp;
        };
        return oTableInit;
    };
    var oTable = new TableInit();
    $(document).ready(function () {
        $("#txt-StartTime").val('@DateTime.UtcNow.AddDays(-1).ToString("MM/dd/yyyy 00:00")');
        $("#txt-EndTime").val('@DateTime.UtcNow.ToString("MM/dd/yyyy HH:mm")');
        oTable.Init();

        $("#query").click(function () {
            $("body").mLoading({ text: "Processing..." }, "show");
            $('#table').bootstrapTable('refresh');
        });
    });
</script>