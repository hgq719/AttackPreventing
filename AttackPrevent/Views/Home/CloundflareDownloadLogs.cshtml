@{
    //Layout = "~/";
}

@*<!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Cloundflare download logs</title>

    </head>
    <body>
        <form>*@
@Styles.Render("~/Content/home.css")
@Styles.Render("~/Content/jquery.mloading/jquery.mloading.css?v=" + Guid.NewGuid())
@Scripts.Render("~/Scripts/jquery.mloading/jquery.mloading.js?v=" + Guid.NewGuid())
<div class="logContainer">
    <div class="queryContainer">
        <ol class="breadcrumb">
            <li class="active">Cloudflare Logs</li>
        </ol>
        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="txt-StartTime">Zone Name</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownList("select-zoneName", new SelectList(ViewBag.ZoneList, "Value", "Text"), new { @class = "form-control" })
            </div>
        </div>

        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="txt-StartTime">Start Time</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="startTime" id="txt-StartTime" class="form-control" />
            </div>
        </div>

        <div class="col-md-4 form-group">
            <div class="col-md-4  label-col">
                <label for="txt-StartTime">End Time</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="endTime" id="txt-EndTime" class="form-control" />
            </div>
        </div>

        <div class="col-md-4 form-group">
            <div class="col-md-4  label-col">
                <label for="txt-StartTime">Host</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="host" id="txt-host" class="form-control" />
            </div>
        </div>

        <div class="col-md-4 form-group">
            <div class="col-md-4  label-col">
                <label for="select-Sample">Sample</label>
            </div>
            <div class="col-md-8">
                <select id="select-Sample" class="form-control">
                    <option>0.1</option>
                    <option>0.01</option>
                    <option>1</option>
                </select>
            </div>
        </div>


        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="txt-SiteId">Site Id</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="siteId" id="txt-SiteId" class="form-control" />
            </div>
        </div>

        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="txt-URL">URL</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="URL" id="txt-URL" class="form-control" />
            </div>
        </div>

        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="select-cacheStatus">Cache Status</label>
            </div>
            <div class="col-md-8">
                <select id="select-cacheStatus" class="form-control">
                    <option>all</option>
                    <option>unknown</option>
                    <option>hit</option>
                </select>
            </div>
        </div>

        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="txt-ip">IP</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="ip" id="txt-ip" class="form-control" />
            </div>
        </div>

        <div class="col-md-4 form-group">
            <div class="col-md-4 label-col">
                <label for="txt-responseStatus">Response Status</label>
            </div>
            <div class="col-md-8">
                <input type="text" name="responseStatus" id="txt-responseStatus" class="form-control" />
            </div>
        </div>

        <div class="col-md-4  col-md-offset-4 text-right">
            <button id="btn-query" type="button" class="btn btn-primary">Query</button>
            <a id="btn-export" class="btn btn-default">Export</a>
        </div>
    </div>

    <div class="resultContainer" style="margin-top: 20px; margin-left: 40px; margin-right: 60px;">
        <table id="table" class="table table-bordered"></table>
    </div>
</div>

<script type="text/javascript">
    var TableInit = function () {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function () {
            $('#table').bootstrapTable({
                url: '/Home/GetCloundflareLogs',         //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: false,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                queryParams: oTableInit.queryParams,//传递参数（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: false,
                showColumns: false,                  //是否显示所有的列
                showRefresh: false,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "RayID",                     //每一行的唯一标识，一般为主键列
                showToggle: false,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                   //是否显示父子表
                columns: [
                    {
                        field: 'ClientRequestHost',
                        title: 'Client Request Host'
                    }, {
                        field: 'ClientIP',
                        title: 'Client IP'
                    }, {
                        field: 'ClientRequestURI',
                        title: 'Client Request URI'
                    }, {
                        field: 'CacheCacheStatus',
                        title: 'Cache Cache Status'
                    }, {
                        field: 'ClientRequestMethod',
                        title: 'Client Request Method'
                    },
                    {
                        field: 'EdgeResponseStatus',
                        title: 'Edge Response Status'
                    },
                ]
            });
        };

        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit,   //页面大小
                offset: params.offset,  //页码
                zoneID: $("#select-zoneName").val(),
                startTime: $("#txt-StartTime").val() === "" ? (new Date()).toJSON() : $("#txt-StartTime").val(),
                endTime: $("#txt-EndTime").val() === "" ? (new Date()).toJSON() : $("#txt-EndTime").val(),
                host: $("#txt-host").val(),
                sample: $("#select-Sample").val(),
                siteId: $("#txt-SiteId").val(),
                url: $("#txt-URL").val(),
                cacheStatus: $("#select-cacheStatus").val(),
                ip: $("#txt-ip").val(),
                responseStatus: $("#txt-responseStatus").val(),
            };
            return temp;
        };
        return oTableInit;
    };
    var oTable = new TableInit();
    $(document).ready(function () {
        oTable.Init();
        
        $("#txt-StartTime").val('@DateTime.UtcNow.AddMinutes(-10).ToString("MM/dd/yyyy HH:mm")');
        $("#txt-EndTime").val('@DateTime.UtcNow.AddMinutes(-5).ToString("MM/dd/yyyy HH:mm")');        
    });
    $("#btn-query").click(function () {
        if (!check()) {
            return;
        }

        $('#table').bootstrapTable('refreshOptions', { limit: 10, offset: 0, pageNumber: 1 });
        
        $("body").mLoading({
            text: "Processing..."
        }, "show");
        var para = oTable.queryParams({ limit: 10, offset: 0 });

        var zoneID = para.zoneID;
        var startTime = para.startTime;
        var endTime = para.endTime;
        var sample = para.sample;

        GetOperateStatus(zoneID, startTime, endTime, sample, refresh);
    });
    $('#btn-export').click(function () {
        if (!check()) {
            return;
        }

        var para = oTable.queryParams({ limit: 10, offset: 0 });
        var uuu = "/home/ExportCloundflareLogs?zoneID=" + para.zoneID + "&startTime=" + para.startTime + "&endTime=" + para.endTime + "&host=" + para.host + "&sample=" + para.sample + "&siteId=" + para.siteId + "&url=" + para.url + "&cacheStatus=" + para.cacheStatus + "&ip=" + para.ip + "&responseStatus=" + para.responseStatus;
        $('#btn-export').attr("href", uuu);
        //$.get(uuu);
    });
    function GetOperateStatus(zoneID, startTime, endTime, sample, callback) {
        $.ajax({
            type: "GET",
            url: "/Home/GetOperateStatus?zoneID=" + zoneID + "&startTime=" + startTime + "&endTime=" + endTime + "&sample=" + sample,
            dataType: "json",
            async: true,
            success: function (data) {
                var status = data.status;
                if (status === "Processing") {
                    GetOperateStatus(zoneID, startTime, endTime, sample, callback);
                } else {
                    $("body").mLoading("hide");
                    callback();
                }
            },
            error: function (jqXHR) {
                $("body").mLoading("hide");
                console.log("Error: " + jqXHR.status);
            }
        });
    }
    function refresh() {
        $('#table').bootstrapTable('refresh');
    }
    function check() {
        var result = true;

        var start = $("#txt-StartTime").val();
        var end = $("#txt-EndTime").val();

        if (!start || !end) {
            alert("The start date and end date is required.");
            result=false;
        }

        if (start && end) {
            if (end <= start) {
                alert("The end date must be greater than the start date.");
                result = false;
            }
        }

        return result;
    }
</script>
