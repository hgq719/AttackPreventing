@{

}
@model AttackPrevent.Models.ZoneModel
@Styles.Render("~/Content/home.css")
<div style="width: 500px; margin-top: 20px; margin-left: 40px;" class="form-horizontal">
    <ol class="breadcrumb">
        <li><a href="~/Home/ZoneList">Zone Manage</a></li>
        <li class="active">Edit</li>
    </ol>
    @using (Html.BeginForm("EditZone", "home", FormMethod.Post))
    {
        <div class="row form-group">
            <label class="col-md-4 label-col">Zone ID</label>
            <div class="col-md-8 ">
                @Html.TextBoxFor(model => model.ZoneId, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ZoneId)
                <div id="text-danger" class="text-danger">
                    @ViewBag.ErrorMessage
                </div>
            </div>
        </div>
        <div class="row form-group">
            <label class="col-md-4 label-col">Zone Name</label>
            <div class="col-md-8 ">
                @Html.TextBoxFor(model => model.ZoneName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ZoneName)
            </div>
        </div>
        <div class="row form-group">
            <label class="col-md-4 label-col">Auth Email</label>
            <div class="col-md-8 ">
                @Html.TextBoxFor(model => model.AuthEmail, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthEmail)
            </div>
        </div>
        <div class="row form-group">
            <label class="col-md-4 label-col">Auth KEY</label>
            <div class="col-md-8 ">
                @Html.TextBoxFor(model => model.AuthKey, new { @class = "form-control", @type = "password" })
                @Html.ValidationMessageFor(model => model.AuthKey)
            </div>
        </div>
        <div class="row form-group">
            <label class="col-md-4 label-col">Threshold for Host (second)</label>
            <div class="col-md-8 ">
                @Html.TextBoxFor(model => model.ThresholdForHost, new { @class = "form-control onlyInteger" })
                @Html.ValidationMessageFor(model => model.ThresholdForHost)
            </div>
        </div>
        <div class="row form-group">
            <label class="col-md-4 label-col">Period for Host</label>
            <div class="col-md-8 ">
                @Html.TextBoxFor(model => model.PeriodForHost, new { @class = "form-control onlyInteger" })
                @Html.ValidationMessageFor(model => model.PeriodForHost)
            </div>
        </div>
        <div class="row form-group">
            <div class="checkbox col-md-4 col-md-offset-4">
                <label>
                    @Html.CheckBoxFor(model => model.IfTestStage) If Test
                </label>
            </div>
        </div>
        <div class="row form-group">
            <div class="checkbox col-md-4 col-md-offset-4">
                <label>
                    @Html.CheckBoxFor(model => model.IfEnable) If Enable
                </label>
            </div>
        </div>
        <div class="row form-group">
            <div class="checkbox col-md-4 col-md-offset-4">
                <label>
                    @Html.CheckBoxFor(model => model.IfAnalyzeByHostRule) If Analyze by Host Rule
                </label>
            </div>
        </div>
        <div>
            @Html.HiddenFor(model => model.TableID)
        </div>
        @Html.CheckBoxFor(model => model.IfAttacking, new { @style = "display:none;" })
        <div class="form-group">
            <div class="col-md-8 col-md-offset-4 text-right">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel", "ZoneList", "Home", new { @class = "btn btn-default" })
            </div>
        </div>
    }

</div>

<script type="text/javascript">
    $('#ZoneId').change(function () {
        $('#text-danger').hide();
    })
</script>




